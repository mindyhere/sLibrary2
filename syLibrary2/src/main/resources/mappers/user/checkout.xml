<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="checkout">

<!-- b_id → 대출상태인 책 권수 -->
<select id="loCount" resultType="int">
	select count(*) from lo_book
	where L_RETURN_YN='N' and L_BOOKID=#{b_id}
</select>

<select id="reCount" resultType="int">
	select count(*) from re_book
	where R_BOOKID=#{b_id} and r_reservation <![CDATA[>=]]> 0
</select>

<!-- b_id → 가장 빠른 대출예정일 조회 -->
<select id="retDate" resultType="String">
	select A.*
	from
	    (select to_char(l_retdate, 'yyyy-mm-dd')  be_return
	    from lo_book
	    where L_RETURN_YN='N' and l_bookid=#{b_id}) A
	where be_return > sysdate and rownum=1
</select>

<!-- 대출내역리스트(lo_book)에 데이터 추가 -->
<insert id="insert_Lobook" parameterType="map">
	insert into lo_book(l_num, l_memno, l_bookid)
	values (lo_book_seq.nextval, 
		(select m_no from sl_member where m_id=#{m_id}), 
		#{b_id})
</insert>

<!-- mloan 업데이트 프로시저 호출:결과값 리턴 -->
<resultMap id="p_result_mloan" type="java.util.Map"></resultMap>
<select id="check_mLoan" parameterType="map" statementType="CALLABLE" resultMap="p_result_mloan">
	DECLARE
		p_result number;
	BEGIN
		check_loan_0(#{userid, mode=IN, jdbcType=VARCHAR}, 
		#{p_result, mode=OUT, jdbcType=INTEGER});
	END;
</select>

<!-- 동일한 책을 기존에 대출중인지 확인 -->
<select id="check_duplicate" resultType="int">
	select count(*)
	from (select * from lo_all_book where m_id=#{m_id} and l_return_yn='N')
	where l_bookid=#{b_id}
</select>

<!-- 회원등급 업데이트 프로시저 -->
<select id="call_checkLevel" statementType="CALLABLE">
	{call check_level(#{m_id})}
</select>

</mapper>